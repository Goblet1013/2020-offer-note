

1.获取xml文件
ApplicationContext context = new ClassPathXmlApplicationContext("beans.xml");
1）跟踪代码，发现this.resourcePatternResolver = getResourcePatternResolver();设定资源匹配处理器
2）之后使用PathMatchingResourcePatternResolver路径匹配资源解析器，可以解析传入的文件路径名
3）设置资源文件setConfigLocations，将文件路径放在configLocations字符串数组中
4）environment环境由profile配置文件和PropertyResolver属性解析器组成
5）









===========================================================================
spring事务的五种隔离级别，七种传播行为
隔离级别：
ISOLATION_DEFAULT默认使用数据库隔离级别
ISOLATION_READ_UNCOMMITTED读其他事务未提交的数据，出现脏读，不可重复读，幻读
ISOLATION_READ_COMMITTED读其他事务已提交的数据，避免脏读，出现不可重复读，幻读
ISOLATION_REPEATABLE_READ防止脏读，不可重复读，出现幻读
ISOLATION_SERIALIZABLE串行化，最高级别，避免上述问题

脏读：多个事务同时运行，某个事务更改数据后出错回滚，但是其他事务读取到了更改的数据
不可重复读：一个事务中多次读取同一个数据，得到不同的结果，因为其他事务在两次读取期间更改了数据
幻读：一个事务读取多个数据，第一次和第二次得到的数据集数量不相同，因为其他事务在两次读取期间更改了数据

传播行为：
PROPAGATION_REQUIRED 外部有事务则支持使用，没有则开启事务
PROPAGATION_SUPPORTS 外部有事务则支持使用，没有则非事务运行
PROPAGATION_MANDATORY 外部有事务则支持使用，没有则抛出异常
PROPAGATION_REQUIRES_NEW 总是开启一个新的事务，如果一个事务已经存在则挂起
PROPAGATION_NOT_SUPPORTED 非事务运行，挂起存在的事务
PROPAGATION_NEVER 非事务运行，存在事务则抛出异常
PROPAGATION_NESTED 嵌套事务运行，存在事务则运行，不存在则按照PROPAGATION_REQUIRED运行